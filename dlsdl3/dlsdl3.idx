nimTitle	dlsdl3	dlsdl3.html	module src/dlsdl3		0
nim	sdl3_init	dlsdl3.html#sdl3_init	proc sdl3_init(flags = INIT_VIDEO): bool		52
nim	sdl3_init_sub_system	dlsdl3.html#sdl3_init_sub_system,InitFlags	proc sdl3_init_sub_system(flags: InitFlags): bool		61
nim	sdl3_quit_subsystem	dlsdl3.html#sdl3_quit_subsystem,InitFlags	proc sdl3_quit_subsystem(flags: InitFlags)		66
nim	was_init	dlsdl3.html#was_init	proc was_init(flags = InitFlags 0): InitFlags		72
nim	sdl3_quit	dlsdl3.html#sdl3_quit	proc sdl3_quit()		78
nim	sd3_avail	dlsdl3.html#sd3_avail	proc sd3_avail(flags = INIT_VIDEO): bool		84
nim	create_audio_stream	dlsdl3.html#create_audio_stream,AudioSpec,AudioSpec	proc create_audio_stream(src_spec, dst_spec: AudioSpec): AudioStreamPtr		102
nim	destroy	dlsdl3.html#destroy,AudioStreamPtr	proc destroy(stream: AudioStreamPtr)		113
nim	flush	dlsdl3.html#flush,AudioStreamPtr	proc flush(stream: AudioStreamPtr): bool		119
nim	get_audio_device_name	dlsdl3.html#get_audio_device_name,AudioDeviceID	proc get_audio_device_name(devid: AudioDeviceID): string		130
nim	get_audio_driver	dlsdl3.html#get_audio_driver,int	proc get_audio_driver(index: int): string		138
nim	get_audio_output_devices	dlsdl3.html#get_audio_output_devices	proc get_audio_output_devices(): seq[AudioDeviceID]		148
nim	get_audio_stream_available	dlsdl3.html#get_audio_stream_available,AudioStreamPtr	proc get_audio_stream_available(stream: AudioStreamPtr): bool		164
nim	get_audio_stream_device	dlsdl3.html#get_audio_stream_device,AudioStreamPtr	proc get_audio_stream_device(stream: AudioStreamPtr): AudioDeviceID		173
nim	get_current_audio_driver	dlsdl3.html#get_current_audio_driver	proc get_current_audio_driver(): string		186
nim	get_num_audio_drivers	dlsdl3.html#get_num_audio_drivers	proc get_num_audio_drivers(): int		192
nim	open_audio_device_stream	dlsdl3.html#open_audio_device_stream,AudioDeviceID,AudioSpec,AudioStreamCallback,pointer	proc open_audio_device_stream(devid: AudioDeviceID; spec: AudioSpec;\n                         callback: AudioStreamCallback; userdata: pointer = nil): AudioStreamPtr		211
nim	pause_audio_device	dlsdl3.html#pause_audio_device,AudioDeviceID	proc pause_audio_device(dev: AudioDeviceID): bool		228
nim	put_audio_stream_data	dlsdl3.html#put_audio_stream_data,AudioStreamPtr,pointer,int	proc put_audio_stream_data(stream: AudioStreamPtr; buf: pointer; buflen: int): bool		235
nim	resume_audio_device	dlsdl3.html#resume_audio_device,AudioDeviceID	proc resume_audio_device(dev: AudioDeviceID): bool		244
nim	clear_clipboard_data	dlsdl3.html#clear_clipboard_data	proc clear_clipboard_data(): bool		277
nim	get_clipboard_data	dlsdl3.html#get_clipboard_data,string	proc get_clipboard_data(mime_type: string): seq[byte]		284
nim	has_clipboard_data	dlsdl3.html#has_clipboard_data,string	proc has_clipboard_data(mime_type: string): bool		300
nim	clear_error	dlsdl3.html#clear_error	proc clear_error()		318
nim	get_error	dlsdl3.html#get_error	proc get_error(): string		326
nim	free_drop_event_file	dlsdl3.html#free_drop_event_file,Event	proc free_drop_event_file(event: var Event)		342
nim	peep_events	dlsdl3.html#peep_events,openArray[Event],int,EventAction,EventType,EventType	proc peep_events(events: var openArray[Event]; numevents: int; action: EventAction;\n            min_type, max_type: EventType): int		359
nim	peep_events	dlsdl3.html#peep_events,openArray[Event],EventAction,EventType,EventType	proc peep_events(events: var openArray[Event]; action: EventAction;\n            min_type, max_type: EventType): int		373
nim	poll_event	dlsdl3.html#poll_event	proc poll_event(): bool		377
nim	poll	dlsdl3.html#poll,Event	proc poll(event: var Event): bool		383
nim	pump_events	dlsdl3.html#pump_events	proc pump_events()		389
nim	push	dlsdl3.html#push,Event	proc push(event: var Event): bool		395
nim	set_event_enabled	dlsdl3.html#set_event_enabled,EventType,bool	proc set_event_enabled(typ: EventType; state: bool)		403
nim	wait	dlsdl3.html#wait	proc wait(): bool		413
nim	wait	dlsdl3.html#wait,Event	proc wait(event: var Event): bool		419
nim	wait_timeout	dlsdl3.html#wait_timeout,int32	proc wait_timeout(timeout: int32): bool		425
nim	wait_timeout	dlsdl3.html#wait_timeout,Event,int32	proc wait_timeout(event: var Event; timeout: int32): bool		431
nim	get_hint	dlsdl3.html#get_hint,HintName	proc get_hint(name: HintName): string		468
nim	set_hint	dlsdl3.html#set_hint,HintName,string	proc set_hint(name: HintName; value: string): bool		478
nim	log_message	dlsdl3.html#log_message,LogCategory,LogPriority,string	proc log_message(category: LogCategory; priority: LogPriority; message: string)		516
nim	log	dlsdl3.html#log,string	proc log(message: string)		519
nim	log_critical	dlsdl3.html#log_critical,LogCategory,string	proc log_critical(category: LogCategory; message: string)		525
nim	log_debug	dlsdl3.html#log_debug,LogCategory,string	proc log_debug(category: LogCategory; message: string)		531
nim	log_error	dlsdl3.html#log_error,LogCategory,string	proc log_error(category: LogCategory; message: string)		537
nim	log_info	dlsdl3.html#log_info,LogCategory,string	proc log_info(category: LogCategory; message: string)		547
nim	log_set_output_function	dlsdl3.html#log_set_output_function,LogOutputFunction,pointer	proc log_set_output_function(callback: LogOutputFunction; userdata: pointer = nil)		566
nim	log_set_priority	dlsdl3.html#log_set_priority,LogCategory,LogPriority	proc log_set_priority(category: LogCategory; priority: LogPriority)		574
nim	log_verbose	dlsdl3.html#log_verbose,LogCategory,string	proc log_verbose(category: LogCategory; message: string)		581
nim	log_warn	dlsdl3.html#log_warn,LogCategory,string	proc log_warn(category: LogCategory; message: string)		587
nim	show_message_box	dlsdl3.html#show_message_box,MessageBoxData,int	proc show_message_box(messageboxdata: var MessageBoxData; buttonid: var int): bool		608
nim	show_simple_message_box	dlsdl3.html#show_simple_message_box,MessageBoxFlags,string,string,WindowPtr	proc show_simple_message_box(flags: MessageBoxFlags; title: string; message: string;\n                        window: WindowPtr = nil): bool		619
nim	capture_mouse	dlsdl3.html#capture_mouse,bool	proc capture_mouse(enabled: bool): bool		633
nim	create_color_cursor	dlsdl3.html#create_color_cursor,SurfacePtr,int,int	proc create_color_cursor(surface: SurfacePtr; hot_x, hot_y: int): CursorPtr		640
nim	create_cursor	dlsdl3.html#create_cursor,openArray[byte],openArray[byte],int,int,int,int	proc create_cursor(data, mask: openArray[byte]; w, h: int; hot_x, hot_y: int): CursorPtr		648
nim	cursor_visible	dlsdl3.html#cursor_visible	proc cursor_visible(): bool		665
nim	destroy	dlsdl3.html#destroy,CursorPtr	proc destroy(cursor: CursorPtr)		671
nim	get_cursor	dlsdl3.html#get_cursor	proc get_cursor(): CursorPtr		677
nim	get_global_mouse_state	dlsdl3.html#get_global_mouse_state	proc get_global_mouse_state(): tuple[x, y: float, state: uint32]		685
nim	get_mouse_state	dlsdl3.html#get_mouse_state	proc get_mouse_state(): tuple[x, y: float, state: uint32]		695
nim	hide_cursor	dlsdl3.html#hide_cursor	proc hide_cursor(): bool		706
nim	set_cursor	dlsdl3.html#set_cursor,CursorPtr	proc set_cursor(cursor: CursorPtr): bool		712
nim	show_cursor	dlsdl3.html#show_cursor	proc show_cursor(): bool		721
nim	map_rgb	dlsdl3.html#map_rgb,PixelFormat,byte,byte,byte	proc map_rgb(format: PixelFormat; r, g, b: byte): uint32		761
nim	map_rgba	dlsdl3.html#map_rgba,PixelFormat,byte,byte,byte,byte	proc map_rgba(format: PixelFormat; r, g, b, a: byte): uint32		770
nim	create_renderer	dlsdl3.html#create_renderer,WindowPtr,string	proc create_renderer(window: WindowPtr; name: string; flags = RendererFlags 0): RendererPtr		825
nim	create_renderer	dlsdl3.html#create_renderer,WindowPtr	proc create_renderer(window: WindowPtr; flags = RendererFlags 0): RendererPtr		834
nim	create_texture	dlsdl3.html#create_texture,RendererPtr,PixelFormatEnum,TextureAccess,int,int	proc create_texture(renderer: RendererPtr; format: PixelFormatEnum;\n               access: TextureAccess; width, height: int): TexturePtr		845
nim	create_texture_from_surface	dlsdl3.html#create_texture_from_surface,RendererPtr,SurfacePtr	proc create_texture_from_surface(renderer: RendererPtr; surface: SurfacePtr): TexturePtr		855
nim	create_window_and_renderer	dlsdl3.html#create_window_and_renderer,int,int,WindowFlags	proc create_window_and_renderer(width, height: int;\n                           window_flags: WindowFlags = WindowFlags 0): tuple[\n    window: WindowPtr, renderer: RendererPtr]		864
nim	destroy	dlsdl3.html#destroy,RendererPtr	proc destroy(renderer: RendererPtr)		886
nim	destroy	dlsdl3.html#destroy,TexturePtr	proc destroy(texture: TexturePtr)		894
nim	get_renderer	dlsdl3.html#get_renderer,WindowPtr	proc get_renderer(window: WindowPtr): RendererPtr		924
nim	query_texture	dlsdl3.html#query_texture,TexturePtr,uint32,int,int,int	proc query_texture(texture: TexturePtr; format: var uint32; access: var int;\n              w, h: var int): bool		944
nim	clear	dlsdl3.html#clear,RendererPtr	proc clear(renderer: RendererPtr): bool		960
nim	fill_rect	dlsdl3.html#fill_rect,RendererPtr	proc fill_rect(renderer: RendererPtr): bool		973
nim	fill_rect	dlsdl3.html#fill_rect,RendererPtr,FRect	proc fill_rect(renderer: RendererPtr; rect: FRect): bool		980
nim	fill_rect	dlsdl3.html#fill_rect,RendererPtr,float,float,float,float	proc fill_rect(renderer: RendererPtr; x, y: float; w, h: float): bool		989
nim	render_geometry	dlsdl3.html#render_geometry,RendererPtr,TexturePtr,openArray[Vertex]	proc render_geometry(renderer: RendererPtr; texture: TexturePtr;\n                vertices: openArray[Vertex]): bool		1000
nim	render_geometry	dlsdl3.html#render_geometry,RendererPtr,openArray[Vertex]	proc render_geometry(renderer: RendererPtr; vertices: openArray[Vertex]): bool		1011
nim	render_geometry	dlsdl3.html#render_geometry,RendererPtr,TexturePtr,openArray[Vertex],openArray[cint]	proc render_geometry(renderer: RendererPtr; texture: TexturePtr;\n                vertices: openArray[Vertex]; indices: openArray[cint]): bool		1020
nim	render_geometry	dlsdl3.html#render_geometry,RendererPtr,openArray[Vertex],openArray[cint]	proc render_geometry(renderer: RendererPtr; vertices: openArray[Vertex];\n                indices: openArray[cint]): bool		1033
nim	render_line	dlsdl3.html#render_line,RendererPtr,float,float,float,float	proc render_line(renderer: RendererPtr; x1, y1: float; x2, y2: float): bool		1047
nim	render_point	dlsdl3.html#render_point,RendererPtr,float,float	proc render_point(renderer: RendererPtr; x, y: float): bool		1058
nim	render_point	dlsdl3.html#render_point,RendererPtr,int,int	proc render_point(renderer: RendererPtr; x, y: int): bool		1065
nim	present	dlsdl3.html#present,RendererPtr	proc present(renderer: RendererPtr)		1071
nim	render_rect	dlsdl3.html#render_rect,RendererPtr,FRect	proc render_rect(renderer: RendererPtr; rect: FRect): bool		1080
nim	render_rect	dlsdl3.html#render_rect,RendererPtr,float,float,float,float	proc render_rect(renderer: RendererPtr; x, y: float; w, h: float): bool		1089
nim	render_texture	dlsdl3.html#render_texture,RendererPtr,TexturePtr	proc render_texture(renderer: RendererPtr; texture: TexturePtr): bool		1099
nim	render_texture	dlsdl3.html#render_texture,RendererPtr,TexturePtr,FRect	proc render_texture(renderer: RendererPtr; texture: TexturePtr; dst: FRect): bool		1107
nim	render_texture	dlsdl3.html#render_texture,RendererPtr,TexturePtr,int,int,int,int	proc render_texture(renderer: RendererPtr; texture: TexturePtr; x, y, w, h: int): bool		1119
nim	render_texture	dlsdl3.html#render_texture,RendererPtr,TexturePtr,FRect,FRect	proc render_texture(renderer: RendererPtr; texture: TexturePtr;\n               srcrect, dstrect: FRect): bool		1129
nim	render_texture_rotated	dlsdl3.html#render_texture_rotated,RendererPtr,TexturePtr,FRect,FRect,float,FPoint,RendererFlip	proc render_texture_rotated(renderer: RendererPtr; texture: TexturePtr;\n                       srcrect, dstrect: FRect; angle: float; center: FPoint;\n                       flip: RendererFlip): bool		1141
nim	clip_rect	dlsdl3.html#clip_rect,RendererPtr,Rect	proc clip_rect(renderer: RendererPtr; rect: Rect): bool		1162
nim	set_draw_blend_mode	dlsdl3.html#set_draw_blend_mode,RendererPtr,BlendMode	proc set_draw_blend_mode(renderer: RendererPtr; blend_mode: BlendMode): bool		1171
nim	set_draw_color	dlsdl3.html#set_draw_color,RendererPtr,byte,byte,byte,byte	proc set_draw_color(renderer: RendererPtr; r, g, b: byte; a: byte = 0x000000FF): bool		1179
nim	set_scale	dlsdl3.html#set_scale,RendererPtr,float,float	proc set_scale(renderer: RendererPtr; scale_x, scale_y: float): bool		1193
nim	set_target	dlsdl3.html#set_target,RendererPtr,TexturePtr	proc set_target(renderer: RendererPtr; texture: TexturePtr = nil): bool		1201
nim	set_vsync	dlsdl3.html#set_vsync,RendererPtr,bool	proc set_vsync(renderer: RendererPtr; vsync: bool): bool		1208
nim	set_alpha_mod	dlsdl3.html#set_alpha_mod,TexturePtr,byte	proc set_alpha_mod(texture: TexturePtr; alpha: byte): bool		1217
nim	set_blend_mode	dlsdl3.html#set_blend_mode,TexturePtr,BlendMode	proc set_blend_mode(texture: TexturePtr; blend_mode: BlendMode): bool		1224
nim	set_color_mod	dlsdl3.html#set_color_mod,TexturePtr,byte,byte,byte	proc set_color_mod(texture: TexturePtr; r, g, b: byte): bool		1232
nim	set_scale_mode	dlsdl3.html#set_scale_mode,TexturePtr,ScaleMode	proc set_scale_mode(texture: TexturePtr; scale_mode: ScaleMode): bool		1240
nim	update	dlsdl3.html#update,TexturePtr,Rect,pointer,int	proc update(texture: TexturePtr; rect: var Rect; pixels: pointer; pitch: int): bool		1251
nim	update	dlsdl3.html#update,TexturePtr,pointer,int	proc update(texture: TexturePtr; pixels: pointer; pitch: int): bool		1260
nim	create_surface_from	dlsdl3.html#create_surface_from,pointer,int,int,int,uint32	proc create_surface_from(pixels: pointer; width, height: int; pitch: int;\n                    format: uint32): SurfacePtr		1340
nim	destroy	dlsdl3.html#destroy,SurfacePtr	proc destroy(surface: SurfacePtr)		1350
nim	load_bmp	dlsdl3.html#load_bmp,string	proc load_bmp(file: string): SurfacePtr		1369
nim	save_bmp	dlsdl3.html#save_bmp,SurfacePtr,string	proc save_bmp(surface: SurfacePtr; file: string): bool		1399
nim	set_color_key	dlsdl3.html#set_color_key,SurfacePtr,bool,uint32	proc set_color_key(surface: SurfacePtr; flag: bool; key: uint32): bool		1411
nim	add_timer	dlsdl3.html#add_timer,uint32,TimerCallback,pointer	proc add_timer(interval: uint32; callback: TimerCallback; param: pointer = nil): TimerID		1440
nim	delay	dlsdl3.html#delay,uint32	proc delay(ms: uint32)		1450
nim	delay_ns	dlsdl3.html#delay_ns,uint64	proc delay_ns(ns: uint64)		1455
nim	get_performance_counter	dlsdl3.html#get_performance_counter	proc get_performance_counter(): uint64		1460
nim	get_performance_frequency	dlsdl3.html#get_performance_frequency	proc get_performance_frequency(): uint64		1466
nim	get_ticks	dlsdl3.html#get_ticks	proc get_ticks(): uint64		1472
nim	get_ticks_ns	dlsdl3.html#get_ticks_ns	proc get_ticks_ns(): uint64		1480
nim	remove_timer	dlsdl3.html#remove_timer,TimerID	proc remove_timer(id: TimerID): bool		1486
nim	get_revision	dlsdl3.html#get_revision	proc get_revision(): string		1503
nim	get_version	dlsdl3.html#get_version	proc get_version(): tuple[major, minor, patch: int]		1509
nim	create_popup_window	dlsdl3.html#create_popup_window,WindowPtr,int,int,int,int,uint32	proc create_popup_window(parent: WindowPtr; offset_x, offset_y: int; w, h: int;\n                    flags: uint32): WindowPtr		1521
nim	create_window	dlsdl3.html#create_window,string,int,int	proc create_window(title: string; w, h: int; flags = WindowFlags 0): WindowPtr		1532
nim	create_window_with_position	dlsdl3.html#create_window_with_position,string,int,int,int,int	proc create_window_with_position(title: string; x, y: int; w, h: int;\n                            flags = WindowFlags 0): WindowPtr		1543
nim	destroy	dlsdl3.html#destroy,WindowPtr	proc destroy(window: WindowPtr)		1553
nim	disable_screen_saver	dlsdl3.html#disable_screen_saver	proc disable_screen_saver(): bool		1563
nim	enable_screen_saver	dlsdl3.html#enable_screen_saver	proc enable_screen_saver(): bool		1577
nim	flash	dlsdl3.html#flash,WindowPtr,FlashOperation	proc flash(window: WindowPtr; operation: FlashOperation): bool		1584
nim	get_closest_fullscreen_display_mode	dlsdl3.html#get_closest_fullscreen_display_mode,DisplayID,int,int,float,bool	proc get_closest_fullscreen_display_mode(display_id: DisplayID; w, h: int;\n                                    refresh_rate: float;\n                                    include_high_density_modes: bool): ptr DisplayMode		1608
nim	get_current_display_mode	dlsdl3.html#get_current_display_mode,DisplayID	proc get_current_display_mode(display_id: DisplayID): ptr DisplayMode		1622
nim	get_current_video_driver	dlsdl3.html#get_current_video_driver	proc get_current_video_driver(): string		1631
nim	get_display_bounds	dlsdl3.html#get_display_bounds,DisplayID,Rect	proc get_display_bounds(display_id: DisplayID; rect: var Rect): bool		1642
nim	get_display_bounds	dlsdl3.html#get_display_bounds,DisplayID,int,int,int,int	proc get_display_bounds(display_id: DisplayID; x, y: var int; width, height: var int): bool		1651
nim	get_display_content_scale	dlsdl3.html#get_display_content_scale,DisplayID	proc get_display_content_scale(display_id: DisplayID): float		1667
nim	get_display_for_window	dlsdl3.html#get_display_for_window,WindowPtr	proc get_display_for_window(window: WindowPtr): DisplayID		1677
nim	get_display_name	dlsdl3.html#get_display_name,DisplayID	proc get_display_name(display_id: DisplayID): string		1687
nim	get_displays	dlsdl3.html#get_displays	proc get_displays(): seq[DisplayID]		1706
nim	get_display_usable_bounds	dlsdl3.html#get_display_usable_bounds,DisplayID,Rect	proc get_display_usable_bounds(display_id: DisplayID; rect: var Rect): bool		1723
nim	get_display_usable_bounds	dlsdl3.html#get_display_usable_bounds,DisplayID,int,int	proc get_display_usable_bounds(display_id: DisplayID; width, height: var int): bool		1731
nim	get_fullscreen_display_modes	dlsdl3.html#get_fullscreen_display_modes,DisplayID	proc get_fullscreen_display_modes(display_id: DisplayID): seq[DisplayMode]		1762
nim	get_grabbed_window	dlsdl3.html#get_grabbed_window	proc get_grabbed_window(): WindowPtr		1779
nim	get_num_video_drivers	dlsdl3.html#get_num_video_drivers	proc get_num_video_drivers(): int		1787
nim	get_primary_display	dlsdl3.html#get_primary_display	proc get_primary_display(): DisplayID		1794
nim	get_flags	dlsdl3.html#get_flags,WindowPtr	proc get_flags(window: WindowPtr): WindowFlags		1808
nim	get_window_from_id	dlsdl3.html#get_window_from_id	proc get_window_from_id(id: WindowID or uint32): WindowPtr		1816
nim	get_fullscreen_mode	dlsdl3.html#get_fullscreen_mode,WindowPtr	proc get_fullscreen_mode(window: WindowPtr = nil): ptr DisplayMode		1822
nim	get_grab	dlsdl3.html#get_grab,WindowPtr	proc get_grab(window: WindowPtr): bool		1829
nim	get_id	dlsdl3.html#get_id,WindowPtr	proc get_id(window: WindowPtr): WindowID		1837
nim	get_keyboard_grab	dlsdl3.html#get_keyboard_grab,WindowPtr	proc get_keyboard_grab(window: WindowPtr): bool		1844
nim	get_maximum_size	dlsdl3.html#get_maximum_size,WindowPtr,int,int	proc get_maximum_size(window: WindowPtr; w, h: var int): bool		1850
nim	get_minimum_size	dlsdl3.html#get_minimum_size,WindowPtr,int,int	proc get_minimum_size(window: WindowPtr; w, h: var int): bool		1860
nim	get_mouse_grab	dlsdl3.html#get_mouse_grab,WindowPtr	proc get_mouse_grab(window: WindowPtr): bool		1870
nim	get_pixel_format	dlsdl3.html#get_pixel_format,WindowPtr	proc get_pixel_format(window: WindowPtr): PixelFormatEnum		1881
nim	get_position	dlsdl3.html#get_position,WindowPtr,int,int	proc get_position(window: WindowPtr; x, y: var int): bool		1889
nim	get_size	dlsdl3.html#get_size,WindowPtr,int,int	proc get_size(window: WindowPtr; w, h: var int): bool		1903
nim	hide	dlsdl3.html#hide,WindowPtr	proc hide(window: WindowPtr): bool		1922
nim	`raise`	dlsdl3.html#raise,WindowPtr	proc `raise`(window: WindowPtr): bool		1934
nim	screen_saver_enabled	dlsdl3.html#screen_saver_enabled	proc screen_saver_enabled(): bool		1943
nim	set_bordered	dlsdl3.html#set_bordered,WindowPtr,bool	proc set_bordered(window: WindowPtr; bordered: bool): bool		1951
nim	set_fullscreen	dlsdl3.html#set_fullscreen,WindowPtr,bool	proc set_fullscreen(window: WindowPtr; fullscreen: bool): bool		1962
nim	set_fullscreen_mode	dlsdl3.html#set_fullscreen_mode,WindowPtr,ptr.DisplayMode	proc set_fullscreen_mode(window: WindowPtr; mode: ptr DisplayMode): bool		1969
nim	set_grab	dlsdl3.html#set_grab,WindowPtr,bool	proc set_grab(window: WindowPtr; grabbed: bool): bool		1977
nim	set_icon	dlsdl3.html#set_icon,WindowPtr,SurfacePtr	proc set_icon(window: WindowPtr; surface: SurfacePtr): bool		1987
nim	set_keyboard_grab	dlsdl3.html#set_keyboard_grab,WindowPtr,bool	proc set_keyboard_grab(window: WindowPtr; grabbed: bool): bool		1996
nim	set_maximum_size	dlsdl3.html#set_maximum_size,WindowPtr,int,int	proc set_maximum_size(window: WindowPtr; min_w, min_h: int): bool		2003
nim	set_minimum_size	dlsdl3.html#set_minimum_size,WindowPtr,int,int	proc set_minimum_size(window: WindowPtr; min_w, min_h: int): bool		2010
nim	set_mouse_grab	dlsdl3.html#set_mouse_grab,WindowPtr,bool	proc set_mouse_grab(window: WindowPtr; grabbed: bool): bool		2019
nim	set_position	dlsdl3.html#set_position,WindowPtr,int,int	proc set_position(window: WindowPtr; x, y: int): bool		2029
nim	set_resizable	dlsdl3.html#set_resizable,WindowPtr,bool	proc set_resizable(window: WindowPtr; ontop: bool): bool		2043
nim	set_size	dlsdl3.html#set_size,WindowPtr,int,int	proc set_size(window: WindowPtr; x, y: int): bool		2050
nim	set_title	dlsdl3.html#set_title,WindowPtr,string	proc set_title(window: WindowPtr; title: string): bool		2057
nim	show	dlsdl3.html#show,WindowPtr	proc show(window: WindowPtr): bool		2064
nim	update_surface	dlsdl3.html#update_surface,WindowPtr	proc update_surface(window: WindowPtr): bool		2075
nim	quit_requested	dlsdl3.html#quit_requested	proc quit_requested(): bool		2108
nim	copy	dlsdl3.html#copy,RendererPtr,TexturePtr	proc copy(renderer: RendererPtr; texture: TexturePtr): bool		2139
nim	copy	dlsdl3.html#copy,RendererPtr,TexturePtr,FRect	proc copy(renderer: RendererPtr; texture: TexturePtr; dst: FRect): bool		2145
nim	copy	dlsdl3.html#copy,RendererPtr,TexturePtr,FRect,FRect	proc copy(renderer: RendererPtr; texture: TexturePtr; src, dst: FRect): bool		2151
nim	create_rgb_surface_from	dlsdl3.html#create_rgb_surface_from,pointer,int,int,int,int,uint32,uint32,uint32,uint32	proc create_rgb_surface_from(pixels: pointer; width, height, depth, pitch: int;\n                        rmask, gmask, bmask, amask: uint32): SurfacePtr		2161
nim	free	dlsdl3.html#free,SurfacePtr	proc free(surface: SurfacePtr)		2169
nimgrp	createrenderer	dlsdl3.html#create_renderer-procs-all	proc		825
nimgrp	getdisplaybounds	dlsdl3.html#get_display_bounds-procs-all	proc		1642
nimgrp	peepevents	dlsdl3.html#peep_events-procs-all	proc		359
nimgrp	update	dlsdl3.html#update-procs-all	proc		1251
nimgrp	rendertexture	dlsdl3.html#render_texture-procs-all	proc		1099
nimgrp	destroy	dlsdl3.html#destroy-procs-all	proc		113
nimgrp	rendergeometry	dlsdl3.html#render_geometry-procs-all	proc		1000
nimgrp	getdisplayusablebounds	dlsdl3.html#get_display_usable_bounds-procs-all	proc		1723
nimgrp	waittimeout	dlsdl3.html#wait_timeout-procs-all	proc		425
nimgrp	renderrect	dlsdl3.html#render_rect-procs-all	proc		1080
nimgrp	wait	dlsdl3.html#wait-procs-all	proc		413
nimgrp	renderpoint	dlsdl3.html#render_point-procs-all	proc		1058
nimgrp	fillrect	dlsdl3.html#fill_rect-procs-all	proc		973
nimgrp	copy	dlsdl3.html#copy-procs-all	proc		2139
